name: Version Bump

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  bump-and-tag:
    name: Bump version & optionally tag
    if: |
      github.event_name == 'workflow_dispatch' ||
      (
        github.event_name == 'push' &&
        startsWith(github.ref, 'refs/heads/main') &&
        contains(github.event.head_commit.message, '[bump-')
      )
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python & Poetry
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - run: pip install poetry

      - name: Detect bump mode
        id: mode
        run: |
          MSG="${{ github.event.head_commit.message }}"
          if [[ "$MSG" == *"[bump-release]"* ]]; then
            MODE=release
          else
            MODE=local
          fi
          echo "mode=$MODE" >> "$GITHUB_OUTPUT"
          echo "MODE=$MODE" >> "$GITHUB_ENV"
          echo "::notice::Detected bump mode: $MODE"

      - name: Compute next post-release version
        id: bump
        run: |
          FULL=$(poetry version -s)
          UPSTREAM="${FULL%%.post*}"
          if [[ "$FULL" =~ \.post([0-9]+)$ ]]; then
            NEXT=$((BASH_REMATCH[1] + 1))
          else
            NEXT=1
          fi
          NEW="${UPSTREAM}.post${NEXT}"
          poetry version "$NEW"
          echo "new_version=$NEW" >> "$GITHUB_OUTPUT"
          echo "::notice::Will bump to: $NEW"

      - name: Commit bumped version
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git commit -am "Version ${{ steps.bump.outputs.new_version }}"

      - name: Tag release (only in release mode)
        if: env.MODE == 'release'
        run: |
          echo "Tagging v${{ steps.bump.outputs.new_version }}"
          git tag "v${{ steps.bump.outputs.new_version }}"

      - name: Push commit and tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git push origin HEAD
          if [ "$MODE" = "release" ]; then
            git push origin "v${{ steps.bump.outputs.new_version }}"
          fi